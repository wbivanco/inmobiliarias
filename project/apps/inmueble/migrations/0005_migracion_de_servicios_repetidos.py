# Generated by Django 3.0.10 on 2020-10-10 15:03

from django.db import migrations

# $ python manage.py makemigrations inmueble --empty --name "migracion_de_servicios_repetidos"
from django.db.models import Count
from django.db.models.functions import Lower


def migrar_servicios_repetidos(apps, schema):
    Servicio = apps.get_model('inmueble', 'Servicio')
    Casa = apps.get_model('inmueble', 'Casa')

    servicio_anotacion = Servicio.objects.annotate(nombre_lower=Lower('nombre'))

    servicios_repetidos = servicio_anotacion\
        .values('nombre_lower')\
        .annotate(cantidad=Count('nombre_lower'))\
        .filter(cantidad__gt=1)

    for nombre_servicio in servicios_repetidos:
        candidato = servicio_anotacion.filter(nombre_lower=nombre_servicio['nombre_lower']).first()

        for no_candidato in servicio_anotacion.filter(nombre_lower=nombre_servicio['nombre_lower']).exclude(id=candidato.id):
            print('Servicio candidato {}\n'.format(no_candidato))
            print('Elimando casas del servicio no candidato\n')
            lista_casa_id = list(no_candidato.casa_set.values_list('id', flat=True))
            no_candidato.casa_set.remove(*no_candidato.casa_set.all())
            candidato.casa_set.add(*Casa.objects.filter(id__in=lista_casa_id))

            print('Eliminacion del servicio no candidato\n')
            no_candidato.delete()


class Migration(migrations.Migration):

    dependencies = [
        ('inmueble', '0004_auto_20201003_1317'),
    ]

    operations = [
        migrations.RunPython(migrar_servicios_repetidos, reverse_code=migrations.RunPython.noop)
    ]
